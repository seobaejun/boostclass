'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import { ChevronLeft, ChevronRight, Star, Users, FileText } from 'lucide-react'

const instructors = [
  {
    id: 1,
    name: 'ÏûëÏùÄÏÑ±Í≥µ',
    nickname: 'ÏûëÏùÄÏÑ±Í≥µ Í∞ïÏÇ¨Îãò',
    specialty: 'Î∏îÎ°úÍ∑∏ ÏàòÏùµÌôî',
    description: 'Ïõî 300ÎßåÏõê Î∏îÎ°úÍ∑∏ ÏàòÏùµÏùò ÎπÑÎ∞Ä',
    avatar: 'üéØ',
    rating: 4.9,
    students: 15234,
    courses: 8,
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    achievements: ['Ïõî 300ÎßåÏõê Îã¨ÏÑ±', 'ÏàòÍ∞ïÏÉù ÎßåÏ°±ÎèÑ 99%']
  },
  {
    id: 2,
    name: 'ÏûòÎÇòÍ∞ÄÎäîÏÑúÍ≥ºÏû•',
    nickname: 'ÏûòÎÇòÍ∞ÄÎäîÏÑúÍ≥ºÏû• Í∞ïÏÇ¨Îãò',
    specialty: 'ÏßÅÏû•Ïù∏ Î∂ÄÏóÖ',
    description: 'ÌöåÏÇ¨ Îã§ÎãàÎ©∞ Ïõî 500 Î≤ÑÎäî Î≤ï',
    avatar: 'üíº',
    rating: 4.8,
    students: 12876,
    courses: 6,
    background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
    achievements: ['ÏßÅÏû•Ïù∏ Î∂ÄÏóÖ 1ÏúÑ', 'Ïã§Ï†ú ÏàòÏùµ Ïù∏Ï¶ù']
  },
  {
    id: 3,
    name: 'ÏïåÌååÎÇ®',
    nickname: 'ÏïåÌååÎÇ® Í∞ïÏÇ¨Îãò',
    specialty: 'Íµ¨Í∏Ä Ïï†ÎìúÏÑºÏä§',
    description: 'ÎÖ∏Î≤†Ïù¥Ïä§ÎèÑ Íµ¨Í∏Ä Ïï†ÎìúÏÑºÏä§ ÏÑ±Í≥µ',
    avatar: 'üöÄ',
    rating: 4.9,
    students: 18543,
    courses: 12,
    background: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',
    achievements: ['Ïï†ÎìúÏÑºÏä§ Ï†ÑÎ¨∏Í∞Ä', 'Ïõî 1000ÎßåÏõê Îã¨ÏÑ±']
  },
  {
    id: 4,
    name: 'Ïñ¥ÎπÑ',
    nickname: 'Ïñ¥ÎπÑ Í∞ïÏÇ¨Îãò',
    specialty: 'Ïú†ÌäúÎ∏å Ï±ÑÎÑê',
    description: 'Íµ¨ÎèÖÏûê 10Îßå Îã¨ÏÑ± ÎπÑÎ≤ï',
    avatar: 'üì∫',
    rating: 4.7,
    students: 9876,
    courses: 5,
    background: 'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)',
    achievements: ['Ïú†ÌäúÎ∏å ÌÅ¨Î¶¨ÏóêÏù¥ÌÑ∞', 'Íµ¨ÎèÖÏûê 50Îßå+']
  },
  {
    id: 5,
    name: 'Í¥ëÎßàÏä§ÌÑ∞',
    nickname: 'Í¥ëÎßà Í∞ïÏÇ¨Îãò',
    specialty: 'Ïø†Ìå° ÌååÌä∏ÎÑàÏä§',
    description: 'Ï£ºÎ∂ÄÎèÑ ÏñµÎåÄ Îß§Ï∂ú Í∞ÄÎä•',
    avatar: 'üí∞',
    rating: 5.0,
    students: 23451,
    courses: 15,
    background: 'linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%)',
    achievements: ['Ïø†Ìå° ÌååÌä∏ÎÑàÏä§ 1ÏúÑ', 'ÏñµÎåÄ Îß§Ï∂ú Îã¨ÏÑ±']
  },
  {
    id: 6,
    name: 'ÍπÄÎã§ÏÜî',
    nickname: 'ÍπÄÎã§ÏÜî Í∞ïÏÇ¨Îãò',
    specialty: 'Ïò®ÎùºÏù∏ ÏáºÌïëÎ™∞',
    description: 'Î¨¥Ïû¨Í≥† ÏáºÌïëÎ™∞ Ï∞ΩÏóÖ ÏÑ±Í≥µÍ∏∞',
    avatar: 'üõçÔ∏è',
    rating: 4.8,
    students: 11234,
    courses: 9,
    background: 'linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%)',
    achievements: ['ÏáºÌïëÎ™∞ Ï∞ΩÏóÖ ÏÑ±Í≥µ', 'Î¨¥Ïû¨Í≥† Ï†ÑÎ¨∏Í∞Ä']
  },
  {
    id: 7,
    name: 'ÏûêÏÉùÎ≤ï',
    nickname: 'ÏûêÏÉùÎ≤ï Í∞ïÏÇ¨Îãò',
    specialty: 'Ïú†ÌäúÎ∏å ÏÑ±Ïû•',
    description: 'Î©±ÏÇ¥Ï∫êÎ¶¨ Ï±ÑÎÑê ÏÑ±Ïû•Î≤ï',
    avatar: 'üé¨',
    rating: 4.9,
    students: 16789,
    courses: 11,
    background: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
    achievements: ['Ïú†ÌäúÎ∏å ÏÑ±Ïû• Ï†ÑÎ¨∏Í∞Ä', 'Ï±ÑÎÑê 100Îßå Îã¨ÏÑ±']
  },
  {
    id: 8,
    name: 'ÌòÑÏö∞',
    nickname: 'ÏõêÌòÑÏö∞ Í∞ïÏÇ¨Îãò',
    specialty: 'Ï†úÌú¥ÎßàÏºÄÌåÖ',
    description: 'Ï†úÌú¥ÎßàÏºÄÌåÖÏúºÎ°ú ÏïàÏ†ï ÏàòÏùµ',
    avatar: 'üìä',
    rating: 4.8,
    students: 14567,
    courses: 7,
    background: 'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)',
    achievements: ['Ï†úÌú¥ÎßàÏºÄÌåÖ Ï†ÑÎ¨∏Í∞Ä', 'Ïõî 1000ÎßåÏõê+']
  }
]

export default function InstructorSection() {
  const [currentIndex, setCurrentIndex] = useState(0)
  const [slidesToShow, setSlidesToShow] = useState(4)

  useEffect(() => {
    const updateSlidesToShow = () => {
      if (window.innerWidth < 640) {
        setSlidesToShow(2)
      } else if (window.innerWidth < 1024) {
        setSlidesToShow(3)
      } else {
        setSlidesToShow(4)
      }
    }

    updateSlidesToShow()
    window.addEventListener('resize', updateSlidesToShow)
    return () => window.removeEventListener('resize', updateSlidesToShow)
  }, [])

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % instructors.length)
    }, 3000)

    return () => clearInterval(timer)
  }, [])

  const nextSlide = () => {
    setCurrentIndex((prev) => (prev + 1) % instructors.length)
  }

  const prevSlide = () => {
    setCurrentIndex((prev) => (prev - 1 + instructors.length) % instructors.length)
  }

  const getVisibleInstructors = () => {
    const visible = []
    for (let i = 0; i < slidesToShow; i++) {
      visible.push(instructors[(currentIndex + i) % instructors.length])
    }
    return visible
  }

  return (
    <section className="py-16 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between mb-8">
          <div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">Î∂ÄÏä§Ìä∏ÌÅ¥ÎûòÏä§ Í∞ïÏÇ¨</h2>
            <p className="text-gray-600">Í∞Å Î∂ÑÏïº ÏµúÍ≥†Ïùò Ï†ÑÎ¨∏Í∞ÄÎì§ÏùÑ ÎßåÎÇòÎ≥¥ÏÑ∏Ïöî</p>
          </div>
          <Link href="/instructors" className="text-blue-600 hover:text-blue-700 font-medium">
            ÎçîÎ≥¥Í∏∞ ‚Üí
          </Link>
        </div>

        {/* Instructor Slider */}
        <div className="relative">
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {getVisibleInstructors().map((instructor, index) => (
              <Link
                key={`${instructor.id}-${currentIndex}-${index}`}
                href={`/instructors?instructor=${encodeURIComponent(instructor.name)}`}
                className="group cursor-pointer block"
              >
                <div className="bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden group-hover:-translate-y-2">
                  {/* Instructor Avatar */}
                  <div
                    className="aspect-square relative flex items-center justify-center"
                    style={{ background: instructor.background }}
                  >
                    <div className="text-4xl">{instructor.avatar}</div>
                    <div className="absolute inset-0 bg-black/10 group-hover:bg-black/20 transition-colors" />
                  </div>

                  {/* Instructor Info */}
                  <div className="p-4">
                    <div className="text-center mb-3">
                      <h3 className="font-bold text-gray-900 mb-1">{instructor.name}</h3>
                      <p className="text-sm text-gray-600">{instructor.specialty}</p>
                    </div>

                    <p className="text-xs text-gray-500 text-center mb-3 line-clamp-2">
                      {instructor.description}
                    </p>

                    {/* Stats */}
                    <div className="grid grid-cols-3 gap-2 text-center text-xs mb-3">
                      <div>
                        <div className="flex items-center justify-center mb-1">
                          <Star className="w-3 h-3 text-yellow-400 mr-1" />
                          <span className="font-semibold">{instructor.rating}</span>
                        </div>
                        <div className="text-gray-500">ÌèâÏ†ê</div>
                      </div>
                      <div>
                        <div className="flex items-center justify-center mb-1">
                          <Users className="w-3 h-3 text-blue-500 mr-1" />
                          <span className="font-semibold">{(instructor.students / 1000).toFixed(0)}K</span>
                        </div>
                        <div className="text-gray-500">ÏàòÍ∞ïÏÉù</div>
                      </div>
                      <div>
                        <div className="flex items-center justify-center mb-1">
                          <FileText className="w-3 h-3 text-green-500 mr-1" />
                          <span className="font-semibold">{instructor.courses}</span>
                        </div>
                        <div className="text-gray-500">Í∞ïÏùò</div>
                      </div>
                    </div>

                    {/* Achievements */}
                    <div className="space-y-1">
                      {instructor.achievements.slice(0, 2).map((achievement, idx) => (
                        <div key={idx} className="text-xs bg-gray-50 text-gray-600 px-2 py-1 rounded text-center">
                          ‚ú® {achievement}
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </Link>
            ))}
          </div>

          {/* Navigation Arrows */}
          <button
            onClick={prevSlide}
            className="absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-4 bg-white shadow-lg hover:shadow-xl p-2 rounded-full transition-all duration-200 z-10"
          >
            <ChevronLeft className="w-6 h-6 text-gray-600" />
          </button>
          <button
            onClick={nextSlide}
            className="absolute right-0 top-1/2 transform -translate-y-1/2 translate-x-4 bg-white shadow-lg hover:shadow-xl p-2 rounded-full transition-all duration-200 z-10"
          >
            <ChevronRight className="w-6 h-6 text-gray-600" />
          </button>
        </div>

        {/* Dots Indicator */}
        <div className="flex justify-center mt-8 space-x-2">
          {instructors.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentIndex(index)}
              className={`w-2 h-2 rounded-full transition-colors ${
                index === currentIndex ? 'bg-blue-500' : 'bg-gray-300'
              }`}
            />
          ))}
        </div>
      </div>
    </section>
  )
}
